# Generated by Django 5.0.6 on 2025-08-02 15:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdvertisementPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_name", models.CharField(max_length=200)),
                ("plan_features", models.TextField(blank=True, null=True)),
                ("plan_duration", models.IntegerField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_modified", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Advertisement Plan",
                "verbose_name_plural": "Advertisement Plan",
                "ordering": ["-created_date"],
            },
        ),
        migrations.CreateModel(
            name="ContactUs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("country", models.CharField(max_length=200)),
                ("email", models.EmailField(max_length=200)),
                ("desc", models.TextField(blank=True, null=True)),
                (
                    "contact_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contact",
                "db_table": "contact",
                "ordering": ["-contact_date"],
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("currency_name", models.CharField(max_length=200)),
                ("currency_code", models.CharField(max_length=200)),
                ("symbol", models.CharField(max_length=200)),
                ("flag", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_modified", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Currency",
                "verbose_name_plural": "Currency",
                "db_table": "Currency",
                "ordering": ["-created_date"],
            },
        ),
        migrations.CreateModel(
            name="ListingPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_name", models.CharField(max_length=200)),
                ("plan_features", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_modified", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Listing Plan",
                "verbose_name_plural": "Listing Plan",
                "ordering": ["-created_date"],
            },
        ),
        migrations.CreateModel(
            name="ToolRemovalRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tool_name", models.CharField(max_length=200)),
                ("tool_ref_num", models.CharField(max_length=200, unique=True)),
                ("tool_website", models.URLField(max_length=500)),
                ("tool_id", models.CharField(blank=True, max_length=100, null=True)),
                ("owner_name", models.CharField(max_length=200)),
                ("owner_email", models.EmailField(max_length=200)),
                (
                    "owner_company",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "verification_method",
                    models.CharField(
                        choices=[
                            ("email", "Email Verification"),
                            ("domain", "Domain Verification"),
                            ("documentation", "Documentation"),
                            ("other", "Other"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "removal_reason",
                    models.CharField(
                        choices=[
                            ("discontinued", "Tool Discontinued"),
                            ("rebranding", "Rebranding"),
                            ("privacy", "Privacy Concerns"),
                            ("inaccurate", "Inaccurate Information"),
                            ("other", "Other"),
                        ],
                        max_length=100,
                    ),
                ),
                ("additional_details", models.TextField(blank=True, null=True)),
                (
                    "request_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("completed", "Completed"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("admin_notes", models.TextField(blank=True, null=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tool Removal Request",
                "verbose_name_plural": "Tool Removal Request",
                "db_table": "tool_removal_requests",
                "ordering": ["-request_date"],
            },
        ),
        migrations.CreateModel(
            name="AdvertisementPlanPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "pricing_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advertisement_plan_prices",
                        to="tools.advertisementplan",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advertisement_currency_plan_prices",
                        to="tools.currency",
                    ),
                ),
            ],
            options={
                "verbose_name": "Advertisement Plan Price",
                "verbose_name_plural": "Advertisement Plan Price",
                "db_table": "Advertisement Plan Price",
                "unique_together": {("pricing_plan", "currency")},
            },
        ),
        migrations.CreateModel(
            name="AITool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("tool_ref_num", models.CharField(max_length=200, unique=True)),
                ("user_timezone", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("extra_links", models.TextField(blank=True, null=True)),
                ("category", models.CharField(max_length=100)),
                (
                    "pricing",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("paid", "Paid"),
                            ("freemium", "Freemium"),
                            ("open_source", "Open Source"),
                        ],
                        default="free",
                        max_length=50,
                    ),
                ),
                ("website_url", models.URLField(max_length=500)),
                ("logo_url", models.URLField(blank=True, max_length=500, null=True)),
                (
                    "listing_type",
                    models.CharField(
                        choices=[
                            ("simple", "Simple Listing"),
                            ("verified", "Verified Listing"),
                            ("featured", "Featured Listing"),
                            ("bais_boost", "Basic Boost"),
                            ("pro_spotlight", "Pro Spotlight"),
                            ("ultiate_pro", "Ultimate Pro"),
                        ],
                        default="simple",
                        max_length=50,
                    ),
                ),
                ("tags", models.TextField(blank=True, null=True)),
                ("features", models.TextField(blank=True, null=True)),
                ("date_added", models.DateTimeField(default=django.utils.timezone.now)),
                ("rating", models.FloatField(default=0.0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "contact_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=200, null=True),
                ),
                (
                    "contact_company",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("verification_date", models.DateTimeField(blank=True, null=True)),
                ("ad_start_date", models.DateTimeField(blank=True, null=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="your_tools",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Listed AI Tool",
                "verbose_name_plural": "Listed AI Tool",
                "db_table": "ai_tools",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ListingPlanPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="listing_currency_plan_prices",
                        to="tools.currency",
                    ),
                ),
                (
                    "pricing_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="listing_plan_prices",
                        to="tools.listingplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Listing Plan Price",
                "verbose_name_plural": "Listing Plan Price",
                "db_table": "Listing Plan Price",
                "unique_together": {("pricing_plan", "currency")},
            },
        ),
        migrations.CreateModel(
            name="ToolSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tool_name", models.CharField(max_length=200)),
                ("tool_ref_num", models.CharField(max_length=200, unique=True)),
                ("tool_website", models.URLField(max_length=500)),
                ("user_timezone", models.CharField(max_length=200)),
                ("tool_category", models.CharField(max_length=100)),
                (
                    "tool_pricing",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("paid", "Paid"),
                            ("freemium", "Freemium"),
                            ("open_source", "Open Source"),
                        ],
                        max_length=50,
                    ),
                ),
                ("tool_description", models.TextField()),
                ("extra_links", models.TextField(blank=True, null=True)),
                ("tool_features", models.TextField(blank=True, null=True)),
                ("tool_tags", models.TextField(blank=True, null=True)),
                (
                    "listing_type",
                    models.CharField(
                        choices=[
                            ("simple", "Simple Listing"),
                            ("verified", "Verified Listing"),
                            ("featured", "Featured Listing"),
                            ("bais_boost", "Basic Boost"),
                            ("pro_spotlight", "Pro Spotlight"),
                            ("ultiate_pro", "Ultimate Pro"),
                        ],
                        default="simple",
                        max_length=50,
                    ),
                ),
                ("contact_name", models.CharField(max_length=200)),
                ("contact_email", models.EmailField(max_length=200)),
                (
                    "contact_company",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "submission_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("ready_to_live", "Read To Live"),
                            ("live", "Live"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("admin_notes", models.TextField(blank=True, null=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="total_submissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tool Submission Request",
                "verbose_name_plural": "Tool Submission Request",
                "db_table": "tool_submissions",
                "ordering": ["-submission_date"],
            },
        ),
        migrations.CreateModel(
            name="TooUpdatePricing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="update_price",
                        to="tools.currency",
                    ),
                ),
            ],
            options={
                "verbose_name": "TooUpdatePricing",
                "verbose_name_plural": "TooUpdatePricing",
                "db_table": "TooUpdatePricing",
                "ordering": ["-created_date"],
            },
        ),
        migrations.CreateModel(
            name="AdvertisementPlanPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tool_ref_num", models.CharField(max_length=200, unique=True)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("payment_id", models.CharField(blank=True, max_length=255, null=True)),
                ("order_id", models.CharField(blank=True, max_length=255, null=True)),
                ("signature", models.CharField(blank=True, max_length=512, null=True)),
                ("product_id", models.CharField(blank=True, max_length=255, null=True)),
                ("invoice_url", models.URLField(blank=True, null=True)),
                ("price_paid", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_applied",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="advertisement_plan",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pricing_plan",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tools.advertisementplanprice",
                    ),
                ),
                (
                    "tool_submission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tools.aitool",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tools.currency",
                    ),
                ),
            ],
            options={
                "verbose_name": "Advertisement Plan Payment",
                "verbose_name_plural": "Advertisement Plan Payment",
                "db_table": "Advertisement Plan Payment",
                "indexes": [
                    models.Index(
                        fields=["user"], name="Advertiseme_user_id_7d0f95_idx"
                    ),
                    models.Index(
                        fields=["payment_id"], name="Advertiseme_payment_64f8c3_idx"
                    ),
                    models.Index(
                        fields=["order_id"], name="Advertiseme_order_i_bbc323_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ListingPlanPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tool_ref_num", models.CharField(max_length=200, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("payment_id", models.CharField(blank=True, max_length=255, null=True)),
                ("order_id", models.CharField(blank=True, max_length=255, null=True)),
                ("signature", models.CharField(blank=True, max_length=512, null=True)),
                ("product_id", models.CharField(blank=True, max_length=255, null=True)),
                ("invoice_url", models.URLField(blank=True, null=True)),
                ("price_paid", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_applied",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "currency",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tools.currency",
                    ),
                ),
                (
                    "tool_submission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tools.aitool",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="listing_plan",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pricing_plan",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tools.listingplanprice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Listing Plan Payment",
                "verbose_name_plural": "Listing Plan Payment",
                "db_table": "Listing Plan Payment",
                "indexes": [
                    models.Index(
                        fields=["user"], name="Listing Pla_user_id_b942a4_idx"
                    ),
                    models.Index(
                        fields=["payment_id"], name="Listing Pla_payment_853233_idx"
                    ),
                    models.Index(
                        fields=["order_id"], name="Listing Pla_order_i_dc72c6_idx"
                    ),
                ],
            },
        ),
    ]
